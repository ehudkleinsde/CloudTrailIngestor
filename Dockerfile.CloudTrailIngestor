# Use the Microsoft .NET SDK image to build the projects
FROM mcr.microsoft.com/dotnet/sdk:latest AS build-env
WORKDIR /app

# Copy csproj and restore any dependencies (via NuGet)
COPY *.sln .
COPY AnomalyDetectionBackgroundService/AnomalyDetectionBackgroundService.csproj ./AnomalyDetectionBackgroundService/
COPY CloudTrailIngestor/CloudTrailIngestor.csproj ./CloudTrailIngestor/
COPY CloudTrailProvider/CloudTrailProvider.csproj ./CloudTrailProvider/
COPY Cache/Cache.csproj ./Cache/
COPY Common/Common.csproj ./Common/
COPY MongoDBDriver/MongoDBDriver.csproj ./MongoDBDriver/
COPY CassandraDBDriver/CassandraDBDriver.csproj ./CassandraDBDriver/
COPY RedisDriver/RedisDriver.csproj ./RedisDriver/
COPY Serilogger/Serilogger.csproj ./Serilogger/

RUN dotnet restore

# Copy the project files and build our release
COPY CloudTrailProvider/. ./CloudTrailProvider/
COPY AnomalyDetectionBackgroundService/. ./AnomalyDetectionBackgroundService/
COPY CloudTrailIngestor/. ./CloudTrailIngestor/
COPY Cache/. ./Cache/
COPY Common/. ./Common/
COPY CassandraDBDriver/. ./CassandraDBDriver/
COPY RedisDriver/. ./RedisDriver/
COPY MongoDBDriver/. ./MongoDBDriver/
COPY Serilogger/. ./Serilogger/

RUN dotnet publish CloudTrailIngestor/CloudTrailIngestor.csproj -c Release -o out

# Build runtime image using the ASP.NET Core runtime
FROM mcr.microsoft.com/dotnet/aspnet:latest
WORKDIR /app
COPY --from=build-env /app/out .
EXPOSE 5255
ENTRYPOINT ["dotnet", "CloudTrailIngestor.dll"]
